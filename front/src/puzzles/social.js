// √ânigme Ing√©nierie sociale - Mots de passe dans l'industrie (3 niveaux de difficult√©)
function loadSocialPuzzle(container) {
  // Configuration de la difficult√© depuis l'API
  const difficulty = window.gameState?.difficulty || "easy";

  // D√©finition des √©nigmes selon la difficult√©
  const socialPuzzles = {
    easy: {
      hint: "Le milieu n'est pas une lettre, c'est un chiffre. M√©fie-toi de ce qu'on te demande de lire.",
      title: "L'APPEL DU FAUX TECHNICIEN",
      content: `L'APPEL DU FAUX TECHNICIEN

Un "technicien du support" appelle un employ√© de maintenance et pr√©tend 
qu'il doit v√©rifier son compte. Il lui dicte un code de validation et 
lui demande de le lire √† voix haute.

Le message re√ßu sur l'√©cran du t√©l√©phone est :

Code de v√©rification : 59GHFZ4O9ER34FA2F

Le technicien dit :
"Donnez-moi juste le chiffre du milieu, c'est tout ce dont j'ai besoin."

√ânigme : Quel chiffre le technicien tente-t-il d'obtenir ?

‚ö†Ô∏è ATTENTION : Les pirates utilisent la voix et la confiance humaine 
pour obtenir des codes ou mots de passe (technique de vishing).
Ne jamais communiquer un code, m√™me partiel, par t√©l√©phone ou message.
Dans le milieu industriel, ces codes peuvent donner acc√®s √† des syst√®mes 
de contr√¥le √† distance.`,
      answer: "9",
      maxAttempts: 3,
    },
    medium: {
      hint: "Regarde bien la fin : il demande le dernier chiffre.",
      title: "L'EMAIL DU RESPONSABLE S√âCURIT√â",
      content: `L'EMAIL DU RESPONSABLE S√âCURIT√â

Un employ√© re√ßoit un email apparemment envoy√© par le "Responsable Cybers√©curit√©" :

"Bonjour,
Nous faisons un audit des mots de passe des superviseurs.
Merci d'envoyer le dernier chiffre de votre code d'acc√®s.
‚Äî Service IT"

L'adresse d'envoi est : cybersecurite@indus-sec.com
Mais l'adresse r√©elle est cach√©e : cybersecurite@indus-sec.co

√ânigme : Quel chiffre cherche le pirate √† obtenir ?
(Indices : le code du superviseur est "A2B6C7D".)

‚ö†Ô∏è ATTENTION : Ce mail est une forme de phishing cibl√© (attaque par 
ing√©nierie sociale). Un pirate peut modifier l√©g√®rement une adresse 
(ex. .co au lieu de .com) pour tromper la vigilance.
Ne jamais r√©pondre √† un email qui demande un mot de passe ou un code.`,
      answer: "7",
      maxAttempts: 3,
    },
    hard: {
      hint: "Un badge compromis est celui refus√© juste avant un acc√®s r√©ussi au m√™me lieu.",
      title: "LE BADGE PERDU",
      content: `LE BADGE PERDU

Un badge d'acc√®s √† la salle serveur a √©t√© retrouv√© dans le parking.
Le service de s√©curit√© d√©couvre un rapport d'acc√®s suspect listant 
les tentatives d'ouverture.

Badge_1 : refus√© √† 08h12 - secteur administratif  
Badge_4 : accept√© √† 09h45 - zone production  
Badge_6 : refus√© √† 10h03 - salle serveur  
Badge_7 : accept√© √† 10h05 - salle serveur  
Badge_9 : refus√© √† 10h08 - local technique

Le chef de s√©curit√© te demande :
"Un badge vol√© a permis l'acc√®s √† une zone sensible.
Trouve le chiffre du badge utilis√© ill√©galement."

√ânigme : Quel chiffre du badge a √©t√© utilis√© ill√©galement ?

üîç ANALYSE : Dans un r√©seau industriel, un badge ou identifiant compromis 
peut servir √† contourner les contr√¥les physiques et informatiques.
Les logs d'acc√®s doivent √™tre corr√©l√©s pour rep√©rer un sch√©ma suspect : 
refus + r√©ussite juste apr√®s = probable usurpation.`,
      answer: "6",
      maxAttempts: 3,
    },
  };

  const puzzle = socialPuzzles[difficulty];

  container.innerHTML = `
        <div class="puzzle-hint" style="display: none;">
            <strong>üí° Indice :</strong> ${puzzle.hint}
        </div>
        
        <div class="social-container">
            <div class="social-header">
                <h3>${puzzle.title}</h3>
                <div class="social-icon">üé≠</div>
            </div>
            
            <div class="social-content">
                <div class="social-scenario">
                    ${puzzle.content}
                </div>
            </div>
        </div>
        
        <div class="code-input-section">
            <label for="social-code">Chiffre :</label>
            <input type="text" id="social-code" maxlength="1" placeholder="?" />
            <button id="submit-social" class="btn btn-primary">Valider</button>
        </div>
        
        <div id="social-feedback" class="feedback"></div>
        <div id="social-attempts" class="attempts-count"></div>
    `;

  // Configuration des √©v√©nements
  const codeInput = container.querySelector("#social-code");
  const submitBtn = container.querySelector("#submit-social");
  const feedback = container.querySelector("#social-feedback");
  const attemptsDisplay = container.querySelector("#social-attempts");

  let attempts = 0;
  const maxAttempts = puzzle.maxAttempts;

  // Mettre √† jour l'affichage des tentatives
  function updateAttemptsDisplay() {
    attemptsDisplay.textContent = `Tentatives : ${attempts}/${maxAttempts}`;
  }

  // Validation du code
  submitBtn.addEventListener("click", function () {
    const code = codeInput.value.trim();
    attempts++;

    if (code === puzzle.answer) {
      // Code correct
      feedback.innerHTML = `<div class="success">‚úÖ Correct ! Le chiffre est ${puzzle.answer}</div>`;
      codeInput.disabled = true;
      submitBtn.disabled = true;
      submitBtn.textContent = "‚úì R√©solu";

      // Compl√©ter le puzzle
      setTimeout(() => {
        completePuzzle("social", puzzle.answer);
      }, 1000);

      playSound("success");
    } else {
      // Code incorrect
      if (attempts >= maxAttempts) {
        feedback.innerHTML = `<div class="error">‚ùå √âchec ! Le chiffre √©tait ${puzzle.answer}</div>`;
        codeInput.disabled = true;
        submitBtn.disabled = true;
        submitBtn.textContent = "‚úó √âchou√©";
      } else {
        feedback.innerHTML = `<div class="error">‚ùå Incorrect. ${puzzle.hint}</div>`;
        codeInput.classList.add("shake");
        setTimeout(() => {
          codeInput.classList.remove("shake");
        }, 500);
      }
      playSound("error");
    }

    updateAttemptsDisplay();
  });

  // Validation en temps r√©el
  codeInput.addEventListener("input", function () {
    this.value = this.value.replace(/\D/g, ""); // Seulement les chiffres
    feedback.innerHTML = "";
  });

  // Validation avec Entr√©e
  codeInput.addEventListener("keypress", function (e) {
    if (e.key === "Enter") {
      submitBtn.click();
    }
  });

  // Initialiser l'affichage des tentatives
  updateAttemptsDisplay();

  // Focus sur l'input
  codeInput.focus();
}

// Fonction pour afficher l'indice
function showSocialHint() {
  const hintElement = document.querySelector(".puzzle-hint");
  if (hintElement) {
    hintElement.style.display = "block";
    hintElement.classList.add("show");
  }
}

// Exporter les fonctions
window.loadSocialPuzzle = loadSocialPuzzle;
window.showSocialHint = showSocialHint;
